id: analytics
namespace: shiny_rocks_analytics

inputs:
  - name: data_files
    type: JSON

tasks:
  - id: debug
    type: io.kestra.core.tasks.log.Log
    message: '{{ inputs.data_files }}'

  - id: query
    type: io.kestra.plugin.jdbc.duckdb.Query
    fetch: true
    inputFiles:
      orders.csv: "{{ json(inputs.data_files).uris['orders.csv'] }}"
      payments.csv: "{{ json(inputs.data_files).uris['payments.csv'] }}"
    sql: |
      SELECT
        product_id,
        payment_method,
        SUM(amount) AS sum_amount
      FROM read_csv_auto("{{workingDir}}/payments.csv") AS payments
      INNER JOIN(
        SELECT order_id, product_id FROM read_csv_auto("{{workingDir}}/orders.csv")
      ) AS orders
      ON payments.order_id = orders.order_id
      GROUP BY product_id, payment_method

triggers:

  - id: get_data
    type: io.kestra.core.models.triggers.types.Flow
    inputs:
      data_files: '{{ outputs.file_outputs }}'
    conditions:
      - type: io.kestra.core.models.conditions.types.ExecutionFlowCondition
        namespace: shiny_rocks_produce
        flowId: produce_data
      - type: io.kestra.core.models.conditions.types.ExecutionStatusCondition
        in:
          - SUCCESS